import{b as q}from"./Layout.226466cf.js";import{w as F}from"./index.b378d913.js";import"./toast-store.55f7539f.js";import{r as j,A as x,i as k,s as w}from"./team-store.fa9fd22b.js";function V(){const{subscribe:a,set:b}=F([]);let p;async function P(){const l=await new Promise((c,i)=>{const A=q.subscribe(m=>{m.identity&&(A(),c(m.identity))})});return x.createActor(k,"bkyz2-fmaaa-aaaaa-qaaaq-cai",l)}async function d(){p||(p=await P());let l="fixtures",i=(await p.getDataHashes()).find(m=>m.category===l)??null;const A=localStorage.getItem(l);if(i?.hash!=A){let m=await p.getFixtures();localStorage.setItem("fixtures_data",JSON.stringify(m,j)),localStorage.setItem(l,i?.hash??""),b(m)}else{const m=localStorage.getItem("fixtures_data");let _=[];try{_=JSON.parse(m||"[]")}catch{_=[]}b(_)}}async function f(){let l=[];a(i=>{l=i})();const c=new Date;return l.find(i=>new Date(Number(i.kickOff)/1e6)>c)}return{subscribe:a,sync:d,getNextFixture:f}}const W=V(),D=({IDL:a})=>{const b=a.Rec(),p=a.Rec(),P=a.Rec(),d=a.Rec(),f=a.Rec(),l=a.Rec(),c=a.Nat16,i=a.Nat16,A=a.Nat32,m=a.Record({fixtureId:A,playerId:a.Nat16,eventStartMinute:a.Nat8,eventEndMinute:a.Nat8,teamId:c,eventType:a.Nat8});d.fill(a.Opt(a.Tuple(m,d)));const _=a.Nat8,e=a.Record({id:a.Nat32,status:a.Nat8,awayTeamId:c,highestScoringPlayerId:a.Nat16,homeTeamId:c,seasonId:i,events:d,kickOff:a.Int,homeGoals:a.Nat8,gameweek:_,awayGoals:a.Nat8}),n=a.Record({id:a.Nat16,value:a.Nat,dateOfBirth:a.Int,nationality:a.Text,shirtNumber:a.Nat8,totalPoints:a.Int16,teamId:a.Nat16,position:a.Nat8,lastName:a.Text,firstName:a.Text}),s=a.Record({id:a.Nat16,assists:a.Int16,goalsScored:a.Int16,saves:a.Int16,goalsConceded:a.Int16,events:d,teamId:a.Nat16,position:a.Nat8,points:a.Int16}),r=a.Record({hash:a.Text,category:a.Text}),t=a.Nat16,o=a.Record({events:d,number:a.Nat8,points:a.Int16});P.fill(a.Opt(a.Tuple(o,P)));const S=a.Record({id:a.Nat16,gameweeks:P});p.fill(a.Opt(a.Tuple(S,p)));const E=a.Record({description:a.Text,injuryStartDate:a.Int,expectedEndDate:a.Int});b.fill(a.Opt(a.Tuple(E,b)));const g=a.Record({transferDate:a.Int,loanEndDate:a.Int,toTeam:c,transferSeason:i,fromTeam:c,transferGameweek:_});f.fill(a.Opt(a.Tuple(g,f)));const u=a.Record({oldValue:a.Nat,newValue:a.Nat,seasonId:a.Nat16,gameweek:a.Nat8});l.fill(a.Opt(a.Tuple(u,l)));const T=a.Record({id:t,value:a.Nat,seasons:p,dateOfBirth:a.Int,injuryHistory:b,transferHistory:f,isInjured:a.Bool,nationality:a.Text,retirementDate:a.Int,valueHistory:l,shirtNumber:a.Nat8,teamId:c,position:a.Nat8,parentTeamId:a.Nat16,lastName:a.Text,onLoan:a.Bool,firstName:a.Text}),R=a.Record({fixtureId:A,events:a.Vec(m),number:a.Nat8,points:a.Int16}),C=a.Record({id:t,value:a.Nat,dateOfBirth:a.Int,injuryHistory:a.Vec(E),seasonId:i,isInjured:a.Bool,gameweeks:a.Vec(R),nationality:a.Text,retirementDate:a.Int,valueHistory:a.Vec(u),shirtNumber:a.Nat8,teamId:c,position:a.Nat8,parentTeamId:a.Nat16,lastName:a.Text,onLoan:a.Bool,firstName:a.Text}),N=a.Record({id:a.Nat16,events:a.Vec(m),teamId:a.Nat16,position:a.Nat8,gameweek:_,points:a.Int16});return a.Service({calculatePlayerScores:a.Func([a.Nat16,a.Nat8,e],[e],[]),createPlayer:a.Func([c,a.Nat8,a.Text,a.Text,a.Nat8,a.Nat,a.Int,a.Text],[],[]),getActivePlayers:a.Func([],[a.Vec(n)],["query"]),getAllPlayers:a.Func([],[a.Vec(n)],["query"]),getAllPlayersMap:a.Func([a.Nat16,a.Nat8],[a.Vec(a.Tuple(a.Nat16,s))],["query"]),getDataHashes:a.Func([],[a.Vec(r)],["query"]),getPlayer:a.Func([a.Nat16],[T],["query"]),getPlayerDetails:a.Func([a.Nat16,i],[C],["query"]),getPlayerDetailsForGameweek:a.Func([a.Nat16,a.Nat8],[a.Vec(N)],["query"]),getPlayersDetailsForGameweek:a.Func([a.Vec(t),a.Nat16,a.Nat8],[a.Vec(N)],["query"]),getRetiredPlayer:a.Func([a.Text],[a.Vec(T)],["query"]),loanPlayer:a.Func([t,c,a.Int,i,_],[],[]),recallPlayer:a.Func([t],[],[]),retirePlayer:a.Func([t,a.Int],[],[]),revaluePlayerDown:a.Func([t,i,_],[],["oneway"]),revaluePlayerUp:a.Func([t,i,_],[],[]),setDefaultHashes:a.Func([],[],[]),setPlayerInjury:a.Func([t,a.Text,a.Int],[],[]),transferPlayer:a.Func([t,c,i,_],[],[]),unretirePlayer:a.Func([t],[],[]),updateHashForCategory:a.Func([a.Text],[],[]),updatePlayer:a.Func([t,a.Nat8,a.Text,a.Text,a.Nat8,a.Int,a.Text],[],[]),updatePlayerEventDataCache:a.Func([],[],[])})};function G(){const{subscribe:a,set:b}=F([]);let p;w.subscribe(e=>{p=e});let P;W.subscribe(e=>P=e);let d=x.createActor(D,"be2us-64aaa-aaaaa-qaabq-cai");async function f(){let e="players",s=(await d.getDataHashes()).find(t=>t.category===e)??null;const r=localStorage.getItem(e);if(s?.hash!=r){let t=await d.getAllPlayers();localStorage.setItem("players_data",JSON.stringify(t,j)),localStorage.setItem(e,s?.hash??""),b(t)}else{const t=localStorage.getItem("players_data");let o=[];try{o=JSON.parse(t||"[]")}catch{o=[]}b(o)}}async function l(){const e=localStorage.getItem("player_events_data");let n;try{n=JSON.parse(e||"[]")}catch{n=[]}return n}async function c(e,n){try{return await d.getPlayerDetails(e,n)}catch(s){throw console.error("Error fetching player data:",s),s}}async function i(e,n){let s=[];p?.focusGameweek===n?s=await l():s=await d.getPlayersDetailsForGameweek(e.playerIds,p?.activeSeason.id,n);const t=(await Promise.all(s.map(async o=>await A(o)))).map(o=>{const S=m(o,P),E=_(o,e,S),g=o.player.id===e.captainId?S+E:0;return{...o,points:S,bonusPoints:E,totalPoints:S+E+g}});return await Promise.all(t)}async function A(e){let n=0,s=0,r=0,t=0,o=0,S=0,E=0,g=0,u=0,T=0,R=0,C=0,N=0,I=0,h=0,O=0;e.events.forEach(v=>{switch(v.eventType){case 0:R+=1;break;case 1:switch(n+=1,e.position){case 0:case 1:N+=20;break;case 2:N+=15;break;case 3:N+=10;break}break;case 2:switch(s+=1,e.position){case 0:case 1:I+=15;break;case 2:case 3:I+=10;break}break;case 3:T+=1,e.position<2&&T%2===0&&(h+=-15);break;case 4:E+=1;break;case 5:g+=1,e.position<2&&T===0&&(O+=10);break;case 6:u+=1;break;case 7:o+=1;break;case 8:t+=1;break;case 9:r+=1;break;case 10:S+=1;break;case 11:C+=1;break}});let y=[];return a(v=>y=v),{player:y.find(v=>v.id===e.id),points:e.points,appearance:R,goals:n,assists:s,goalsConceded:T,saves:E,cleanSheets:g,penaltySaves:u,missedPenalties:o,yellowCards:t,redCards:r,ownGoals:S,highestScoringPlayerId:C,goalPoints:N,assistPoints:I,goalsConcededPoints:h,cleanSheetPoints:O,gameweek:e.gameweek,bonusPoints:0,totalPoints:0}}function m(e,n){if(!e)return console.error("No gameweek data found:",e),0;let s=0,r=5,t=5,o=20,S=25,E=-20,g=-10,u=-15,T=-10,R=-5,C=10;var N=0,I=0;switch(e.appearance>0&&(s+=r*e.appearance),e.redCards>0&&(s+=E),e.missedPenalties>0&&(s+=g*e.missedPenalties),e.ownGoals>0&&(s+=T*e.ownGoals),e.yellowCards>0&&(s+=R*e.yellowCards),e.player.position){case 0:N=20,I=15,e.saves>=3&&(s+=Math.floor(e.saves/3)*t),e.penaltySaves&&(s+=o*e.penaltySaves),e.cleanSheets>0&&(s+=C),e.goalsConceded>=2&&(s+=Math.floor(e.goalsConceded/2)*u);break;case 1:N=20,I=15,e.cleanSheets>0&&(s+=C),e.goalsConceded>=2&&(s+=Math.floor(e.goalsConceded/2)*u);break;case 2:N=15,I=10;break;case 3:N=10,I=10;break}return(n?n.filter(y=>y.gameweek===e.gameweek):[]).find(y=>(y.homeTeamId===e.player.teamId||y.awayTeamId===e.player.teamId)&&y.highestScoringPlayerId===e.player.id)&&(s+=S),s+=e.goals*N,s+=e.assists*I,s}function _(e,n,s){if(!e)return console.error("No gameweek data found:",e),0;let r=0;var t=0,o=0;switch(e.player.position){case 0:t=20,o=15;break;case 1:t=20,o=15;break;case 2:t=15,o=10;break;case 3:t=10,o=10;break}return n.goalGetterGameweek===e.gameweek&&n.goalGetterPlayerId===e.player.id&&(r=e.goals*t*2),n.passMasterGameweek===e.gameweek&&n.passMasterPlayerId===e.player.id&&(r=e.assists*o*2),n.noEntryGameweek===e.gameweek&&n.noEntryPlayerId===e.player.id&&(e.player.position===0||e.player.position===1)&&e.cleanSheets&&(r=s*2),n.safeHandsGameweek===e.gameweek&&e.player.position===0&&e.saves>=5&&(r=s*2),n.captainFantasticGameweek===e.gameweek&&n.captainId===e.player.id&&e.goals>0&&(r=s),n.braceBonusGameweek===e.gameweek&&e.goals>=2&&(r=s),n.hatTrickHeroGameweek===e.gameweek&&e.goals>=3&&(r=s*2),n.teamBoostGameweek===e.gameweek&&e.player.teamId===n.teamBoostTeamId&&(r=s),r}return{subscribe:a,sync:f,getPlayerDetails:c,getGameweekPlayers:i}}const B=G();export{W as f,B as p};
