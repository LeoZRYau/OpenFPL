var h=Object.defineProperty;var O=(a,s,o)=>s in a?h(a,s,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[s]=o;var S=(a,s,o)=>(O(a,typeof s!="symbol"?s+"":s,o),o);import{H as k,A as w}from"./Layout.79823031.js";const q=({IDL:a})=>{const s=a.Rec(),o=a.Rec(),i=a.Rec(),c=a.Nat16,r=a.Nat16,m=a.Nat32,d=a.Record({fixtureId:m,playerId:a.Nat16,eventStartMinute:a.Nat8,eventEndMinute:a.Nat8,teamId:r,eventType:a.Nat8});s.fill(a.Opt(a.Tuple(d,s)));const n=a.Nat8,l=a.Record({id:a.Nat32,status:a.Nat8,awayTeamId:r,highestScoringPlayerId:a.Nat16,homeTeamId:r,seasonId:c,events:s,kickOff:a.Int,homeGoals:a.Nat8,gameweek:n,awayGoals:a.Nat8}),F=a.Variant({DecodeError:a.Null,NotAllowed:a.Null,NotFound:a.Null,NotAuthorized:a.Null,InvalidData:a.Null,AlreadyExists:a.Null,InvalidTeamError:a.Null}),e=a.Variant({ok:a.Null,err:F}),t=a.Nat16,g=a.Record({icpBalance:a.Nat64,fplBalance:a.Nat64}),_=a.Record({username:a.Text,positionText:a.Text,position:a.Int,principalId:a.Text,points:a.Int16}),T=a.Record({month:a.Nat8,clubId:r,totalEntries:a.Nat,seasonId:c,entries:a.Vec(_)}),E=a.Record({hash:a.Text,category:a.Text}),y=a.Record({playerIds:a.Vec(t),teamName:a.Text,goalGetterPlayerId:t,favouriteTeamId:r,hatTrickHeroGameweek:n,transfersAvailable:a.Nat8,teamBoostGameweek:n,captainFantasticGameweek:n,teamBoostTeamId:r,noEntryPlayerId:t,safeHandsPlayerId:t,braceBonusGameweek:n,passMasterGameweek:n,goalGetterGameweek:n,bankBalance:a.Nat,captainFantasticPlayerId:t,noEntryGameweek:n,safeHandsGameweek:n,principalId:a.Text,passMasterPlayerId:t,captainId:t}),u=a.Record({playerIds:a.Vec(t),teamName:a.Text,goalGetterPlayerId:t,favouriteTeamId:r,hatTrickHeroGameweek:n,transfersAvailable:a.Nat8,teamBoostGameweek:n,captainFantasticGameweek:n,teamBoostTeamId:r,noEntryPlayerId:t,safeHandsPlayerId:t,braceBonusGameweek:n,passMasterGameweek:n,goalGetterGameweek:n,bankBalance:a.Nat,captainFantasticPlayerId:t,gameweek:n,noEntryGameweek:n,safeHandsGameweek:n,principalId:a.Text,passMasterPlayerId:t,captainId:a.Nat16,points:a.Int16}),x=a.Record({id:a.Nat32,status:a.Nat8,awayTeamId:r,highestScoringPlayerId:a.Nat16,homeTeamId:r,seasonId:c,events:a.Vec(d),kickOff:a.Int,homeGoals:a.Nat8,gameweek:n,awayGoals:a.Nat8}),b=a.Record({favouriteTeamId:r,displayName:a.Text,weeklyPosition:a.Int,createDate:a.Int,weeklyPositionText:a.Text,gameweeks:a.Vec(u),monthlyPosition:a.Int,seasonPosition:a.Int,monthlyPositionText:a.Text,profilePicture:a.Vec(a.Nat8),principalId:a.Text,seasonPositionText:a.Text}),p=a.Record({icpDepositAddress:a.Vec(a.Nat8),favouriteTeamId:a.Nat16,displayName:a.Text,fplDepositAddress:a.Vec(a.Nat8),createDate:a.Int,canUpdateFavouriteTeam:a.Bool,reputation:a.Nat32,principalName:a.Text,profilePicture:a.Vec(a.Nat8),membershipType:a.Nat8}),N=a.Record({totalEntries:a.Nat,seasonId:c,entries:a.Vec(_),gameweek:n}),P=a.Record({id:c,name:a.Text,year:a.Nat16});i.fill(a.Opt(a.Tuple(l,i)));const A=a.Record({number:n,fixtures:i,canisterId:a.Text});o.fill(a.Opt(a.Tuple(A,o)));const R=a.Record({id:a.Nat16,postponedFixtures:i,name:a.Text,year:a.Nat16,gameweeks:o}),v=a.Record({activeMonth:a.Nat8,focusGameweek:n,activeSeason:R,activeGameweek:n}),f=a.Record({id:a.Nat16,secondaryColourHex:a.Text,name:a.Text,friendlyName:a.Text,thirdColourHex:a.Text,abbreviatedName:a.Text,shirtType:a.Nat8,primaryColourHex:a.Text}),C=a.Record({id:a.Int,fixtureId:m,playerId:t,callbackName:a.Text,triggerTime:a.Int});return a.Service({executeAddInitialFixtures:a.Func([c,a.Vec(l)],[e],[]),executeCreatePlayer:a.Func([r,a.Nat8,a.Text,a.Text,a.Nat8,a.Nat,a.Int,a.Text],[e],[]),executeLoanPlayer:a.Func([t,r,a.Int],[e],[]),executePromoteFormerTeam:a.Func([r],[e],[]),executePromoteNewTeam:a.Func([a.Text,a.Text,a.Text,a.Text,a.Text,a.Text,a.Nat8],[e],[]),executeRecallPlayer:a.Func([t],[e],[]),executeRescheduleFixture:a.Func([m,n,n,a.Int],[e],[]),executeRetirePlayer:a.Func([t,a.Int],[e],[]),executeRevaluePlayerDown:a.Func([c,n,t],[e],[]),executeRevaluePlayerUp:a.Func([t],[e],[]),executeSetPlayerInjury:a.Func([t,a.Text,a.Int],[e],[]),executeSubmitFixtureData:a.Func([m,a.Vec(d)],[e],[]),executeTransferPlayer:a.Func([t,r],[e],[]),executeUnretirePlayer:a.Func([t],[e],[]),executeUpdatePlayer:a.Func([t,a.Nat8,a.Text,a.Text,a.Nat8,a.Int,a.Text],[e],[]),executeUpdateTeam:a.Func([r,a.Text,a.Text,a.Text,a.Text,a.Text,a.Text,a.Nat8],[e],[]),getAccountBalanceDTO:a.Func([],[g],[]),getClubLeaderboard:a.Func([a.Nat16,a.Nat8,r,a.Nat,a.Nat],[T],["query"]),getClubLeaderboardsCache:a.Func([a.Nat16,a.Nat8],[a.Vec(T)],["query"]),getDataHashes:a.Func([],[a.Vec(E)],["query"]),getFantasyTeam:a.Func([],[y],["query"]),getFantasyTeamForGameweek:a.Func([a.Text,a.Nat16,a.Nat8],[u],["query"]),getFixture:a.Func([c,n,m],[l],[]),getFixtureDTOs:a.Func([],[a.Vec(x)],["query"]),getFixtures:a.Func([],[a.Vec(l)],["query"]),getFixturesForSeason:a.Func([c],[a.Vec(l)],["query"]),getManager:a.Func([a.Text,c,n],[b],["query"]),getProfileDTO:a.Func([],[p],[]),getPublicProfileDTO:a.Func([a.Text],[p],["query"]),getSeasonLeaderboard:a.Func([a.Nat16,a.Nat,a.Nat],[N],["query"]),getSeasonLeaderboardCache:a.Func([a.Nat16],[N],["query"]),getSeasons:a.Func([],[a.Vec(P)],["query"]),getSystemState:a.Func([],[v],["query"]),getTeamValueInfo:a.Func([],[a.Vec(a.Text)],[]),getTeams:a.Func([],[a.Vec(f)],["query"]),getTimers:a.Func([],[a.Vec(C)],[]),getTotalManagers:a.Func([],[a.Nat],["query"]),getValidatableFixtures:a.Func([],[a.Vec(l)],["query"]),getWeeklyLeaderboard:a.Func([a.Nat16,a.Nat8,a.Nat,a.Nat],[N],["query"]),getWeeklyLeaderboardCache:a.Func([a.Nat16,a.Nat8],[N],["query"]),isDisplayNameValid:a.Func([a.Text],[a.Bool],["query"]),rescheduleFixture:a.Func([],[],[]),saveFantasyTeam:a.Func([a.Vec(a.Nat16),a.Nat16,a.Nat8,a.Nat16,a.Nat16],[e],[]),savePlayerEvents:a.Func([m,a.Vec(d)],[],[]),updateDisplayName:a.Func([a.Text],[e],[]),updateFavouriteTeam:a.Func([a.Nat16],[e],[]),updateProfilePicture:a.Func([a.Vec(a.Nat8)],[e],[]),updateTeamValueInfo:a.Func([],[],[]),validateAddInitialFixtures:a.Func([c,a.Vec(l)],[e],[]),validateCreatePlayer:a.Func([r,a.Nat8,a.Text,a.Text,a.Nat8,a.Nat,a.Int,a.Text],[e],[]),validateLoanPlayer:a.Func([t,r,a.Int],[e],[]),validatePromoteFormerTeam:a.Func([r],[e],[]),validatePromoteNewTeam:a.Func([a.Text,a.Text,a.Text,a.Text,a.Text,a.Text],[e],[]),validateRecallPlayer:a.Func([t],[e],[]),validateRescheduleFixtures:a.Func([m,n,n,a.Int],[e],[]),validateRetirePlayer:a.Func([t,a.Int],[e],[]),validateRevaluePlayerDown:a.Func([t],[e],[]),validateRevaluePlayerUp:a.Func([t],[e],[]),validateSetPlayerInjury:a.Func([t,a.Text,a.Int],[e],[]),validateSubmitFixtureData:a.Func([m,a.Vec(d)],[e],[]),validateTransferPlayer:a.Func([t,r],[e],[]),validateUnretirePlayer:a.Func([t],[e],[]),validateUpdatePlayer:a.Func([t,a.Nat8,a.Text,a.Text,a.Nat8,a.Int,a.Text],[e],[]),validateUpdateTeam:a.Func([r,a.Text,a.Text,a.Text,a.Text,a.Text,a.Text],[e],[]),withdrawICP:a.Func([a.Float64,a.Text],[e],[])})};class V{static createActor(s,o="",i=null){const c={host:"http://127.0.0.1:8080"};i?i.agentOptions?i.agentOptions.host=c.host:i.agentOptions=c:i={agentOptions:c};const r=new k({...i.agentOptions});return w.createActor(s,{agent:r,canisterId:o,...i?.actorOptions})}}class W{constructor(){S(this,"actor");this.actor=V.createActor(q,"bkyz2-fmaaa-aaaaa-qaaaq-cai")}getEmpty(){return{id:0,name:"-",primaryColourHex:"#FFFFFF",secondaryColourHex:"#FFFFFF",thirdColourHex:"#FFFFFF",friendlyName:"",abbreviatedName:"-",shirtType:0}}async getTeamsData(s){const o=localStorage.getItem("teams_hash"),i=localStorage.getItem("teams_data"),c=JSON.parse(i||"[]");return!s||s.length===0||o!==s?this.fetchAllTeams(s):c}async fetchAllTeams(s){try{const o=await this.actor.getTeams();return localStorage.setItem("teams_hash",s),localStorage.setItem("teams_data",JSON.stringify(o)),o}catch(o){throw console.error("Error fetching all teams:",o),o}}async getTeamById(s){const o=localStorage.getItem("teams_hash")??"";return(await this.getTeamsData(o)).find(c=>c.id===s)}}export{V as A,W as T,q as i};
